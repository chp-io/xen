gen_user(drakvuf,, vm_r system_r, s0, s0)

declare_singleton_domain(drakvuf_t, mls_priv);
declare_domain(drakvuf_domU_t)
create_domain(dom0_t, drakvuf_domU_t)
manage_domain(dom0_t, drakvuf_domU_t)
manage_domain(drakvuf_t, drakvuf_domU_t)

allow dom0_t drakvuf_domU_t:domain { setdebugging getvcpucontext setvcpucontext };
allow dom0_t drakvuf_domU_t:domain2 { mem_access vm_event gettsc };
allow dom0_t drakvuf_domU_t:hvm { gethvmc sethvmc getparam altp2mhvm_op hvmctl dm };
allow dom0_t drakvuf_domU_t:mmu { stat map_read map_write adjust pageinfo };
allow dom0_t drakvuf_domU_t:shadow { disable };
create_channel(dom0_t, drakvuf_domU_t, drakvuf_domU_t_channel)
allow dom0_t drakvuf_domU_t_channel:event create;

allow drakvuf_t drakvuf_domU_t:domain { setdebugging getvcpucontext setvcpucontext };
allow drakvuf_t drakvuf_domU_t:domain2 { mem_access vm_event gettsc };
allow drakvuf_t drakvuf_domU_t:hvm { gethvmc sethvmc getparam altp2mhvm_op hvmctl dm };
allow drakvuf_t drakvuf_domU_t:mmu { stat map_read map_write adjust pageinfo };
allow drakvuf_t drakvuf_domU_t:shadow { disable };
create_channel(drakvuf_t, drakvuf_domU_t, drakvuf_domU_t_channel)
allow drakvuf_t drakvuf_domU_t_channel:event create;

domain_comms(dom0_t, drakvuf_domU_t)
domain_comms(drakvuf_t, drakvuf_domU_t)
domain_self_comms(drakvuf_domU_t)

allow drakvuf_t drakvuf_t:domain getdomaininfo;
allow drakvuf_t xen_t:xen { physinfo };

create_domain(dom0_t, drakvuf_t)
manage_domain(dom0_t, drakvuf_t)
domain_comms(dom0_t, drakvuf_t)
domain_self_comms(drakvuf_t)
use_device_noiommu(drakvuf_t, iomem_t)
use_device_noiommu(drakvuf_t, ioport_t)
use_device_noiommu(drakvuf_t, device_t)
use_device_noiommu(drakvuf_t, irq_t)

delegate_devices(dom0_t, drakvuf_t)

role vm_r;
role vm_r types { domain_type -dom0_t -drakvuf_t };
